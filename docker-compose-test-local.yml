version: '2'

services:

  unit:
    image: golang:1.6
    volumes:
      - .:/usr/src/myapp
      - /tmp/go:/go
    command: bash -c "cd /usr/src/myapp && go get -d -v -t && go test --cover -v ./... | tee unit.out && go build -v -o go-demo"

  staging-dep:
    extends:
      file: docker-compose-local.yml
      service: app
    ports:
      - 8080:8080
    depends_on:
      - db

  staging:
    extends:
      service: production
    environment:
      - HOST_IP=localhost:8080
    network_mode: host

  production:
    image: golang:1.6
    volumes:
      - .:/usr/src/myapp
      - /tmp/go:/go
    environment:
      - HOST_IP=${HOST_IP}
    command: bash -c "cd /usr/src/myapp && go get -d -v -t && go test --tags integration -v"

  db:
    extends:
      file: docker-compose.yml
      service: db

  registry:
    container_name: registry
    image: registry
    ports:
      - 5000:5000
    volumes:
      - .:/var/lib/registry
    restart: always

  consul-server:
    container_name: consul
    image: consul
    network_mode: host
    environment:
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
    command: agent -server -bind=$HOST_IP -bootstrap-expect=1 -client=$HOST_IP -ui

  consul-agent:
    container_name: consul
    image: consul
    network_mode: host
    environment:
      - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true}'
    command: agent -bind=$HOST_IP -retry-join=$CONSUL_SERVER_IP -client=$HOST_IP
